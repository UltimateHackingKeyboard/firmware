#ifndef __USB_DESCRIPTOR_BASIC_KEYBOARD_REPORT_H__
#define __USB_DESCRIPTOR_BASIC_KEYBOARD_REPORT_H__

// Macros:

    #define USB_BASIC_KEYBOARD_REPORT_DESCRIPTOR_LENGTH 63
    #define USB_BOOT_KEYBOARD_REPORT_LENGTH 8
    #define USB_BASIC_KEYBOARD_SET_REPORT_LENGTH 1

    #define USB_BOOT_KEYBOARD_MAX_KEYS 6

    // Max scanocdode >= 0xDD
    #define USB_BASIC_KEYBOARD_BITFIELD_LENGTH 28
    #define USB_BASIC_KEYBOARD_MIN_BITFIELD_SCANCODE 0
    #define USB_BASIC_KEYBOARD_MAX_BITFIELD_SCANCODE  (8 * USB_BASIC_KEYBOARD_BITFIELD_LENGTH + USB_BASIC_KEYBOARD_MIN_BITFIELD_SCANCODE - 1)
    #if USB_BASIC_KEYBOARD_MAX_BITFIELD_SCANCODE < 0xDD
        #warning USB_BASIC_KEYBOARD_MAX_BITFIELD_SCANCODE less than maximum keyboard scancodes
    #endif

    #define USB_BASIC_KEYBOARD_REPORT_LENGTH (2 + USB_BASIC_KEYBOARD_BITFIELD_LENGTH)
    #if USB_BASIC_KEYBOARD_REPORT_LENGTH > 64
        #error USB_BASIC_KEYBOARD_REPORT_LENGTH greater than max usb report length (64)
    #endif

    #define USB_BASIC_KEYBOARD_MIN_MODIFIERS_SCANCODE 0xE0
    #define USB_BASIC_KEYBOARD_MAX_MODIFIERS_SCANCODE 0xE7

// Variables:

    extern uint8_t UsbBasicKeyboardReportDescriptor[USB_BASIC_KEYBOARD_REPORT_DESCRIPTOR_LENGTH];

#endif
