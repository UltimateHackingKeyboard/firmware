#!/usr/bin/env python3
import sys
from common import get_git_info, read_package_json
import os
import json
import shutil

ZERO_MD5 = '00000000000000000000000000000000'

version_property_prefixes = ['firmware', 'deviceProtocol', 'moduleProtocol', 'userConfig', 'hardwareConfig', 'smartMacros', 'dongleProtocol']
patch_versions = ['Major', 'Minor', 'Patch']

def generate_versions(package_json, git_info, use_zero_versions):
    if use_zero_versions:
        git_info = {
            'repo': '',
            'tag': ''
        }

    version_variables = '\n'.join([
        f"const version_t {prefix}Version = {{ {', '.join(['0' if use_zero_versions else package_json[f'{prefix}Version'].split('.')[i] for i in range(len(patch_versions))])} }};"
        for prefix in version_property_prefixes
    ])
    device_md5_sums = '\n'.join([
        f'    [{device["deviceId"]}] = "{ZERO_MD5}",'
        for device in package_json['devices']
    ])
    module_md5_sums = '\n'.join([
        f'    [{module["moduleId"]}] = "{ZERO_MD5}",'
        for module in package_json['modules']
    ])

    with open(os.path.join(os.path.dirname(__file__), '..', 'shared', 'versions.c'), 'w') as f:
        f.write(f"""// Please do not edit this file by hand!
// It is to be regenerated by /scripts/generate_versions.py
#include "attributes.h"
#include "versioning.h"

{version_variables}

const char gitRepo[] = "{git_info['repo']}";
const char gitTag[] = "{git_info['tag']}";

#ifdef DEVICE_COUNT
ATTR_WEAK const char *const DeviceMD5Checksums[DEVICE_COUNT + 1] = {{
{device_md5_sums}
}};
#endif

ATTR_WEAK const char *const ModuleMD5Checksums[ModuleId_AllModuleCount] = {{
{module_md5_sums}
}};
""")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: generate_versions.py <package.json path> [--zero]")
        sys.exit(1)
    package_json_path = sys.argv[1]
    use_zero_versions = '--zero' in sys.argv
    package_json = read_package_json(package_json_path)
    git_info = get_git_info()
    generate_versions(package_json, git_info, use_zero_versions)
