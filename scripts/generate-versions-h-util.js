const md5Hasher = require('md5');
const path = require('path')
const fs = require('fs')

const ZERO_MD5 = '000000000000000000000000000000000'

const versionPropertyPrefixes = ['firmware', 'deviceProtocol', 'moduleProtocol', 'userConfig', 'hardwareConfig', 'smartMacros'];
const patchVersions = ['Major', 'Minor', 'Patch'];

/**
 * @typedef {object} GitInfo
 * @property {string} repo
 * @property {string} tag
 */

/**
 * @param {object} packageJson - The package.json file
 * @param {GitInfo} gitInfo
 * @param {boolean} useRealData - If true, use real data. If false, use "0" data.
 */
module.exports = function generateVersionsH({ packageJson, gitInfo, useRealData}) {
  packageJson = structuredClone(packageJson)

  gitInfo = useRealData
    ? gitInfo
    : {
      repo: '',
      tag: ''
    }

  const versionVariables = versionPropertyPrefixes.map(versionPropertyPrefix => {
    const versionPropertyName = `${versionPropertyPrefix}Version`
    const versionPropertyValues = packageJson[versionPropertyName].split('.');
    return patchVersions.map(patchVersion => {
      const versionPropertyValue = useRealData ? versionPropertyValues.shift() : "0";
      const versionPropertyMacroName = `${versionPropertyPrefix}${patchVersion}Version`.split(/(?=[A-Z])/).join('_').toUpperCase()
      return `    #define ${versionPropertyMacroName} ${versionPropertyValue}`;
    }).join('\n') + '\n';
  }).join('\n');

  const deviceMd5Sums = packageJson.devices.map(device => {
    const md5 = useRealData
      ? calculateMd5ChecksumOfFile(path.join(__dirname, '..', device.source))
      : ZERO_MD5;

    device.md5 = md5;

    return `    [${device.deviceId}] = "${md5}",`;
  }).join('\n');

  const moduleMd5Sums = packageJson.modules.map(module => {
    const md5 = useRealData
      ? calculateMd5ChecksumOfFile(path.join(__dirname, '..', module.source))
      : ZERO_MD5;

    module.md5 = md5;

    return `    [${module.moduleId}] = "${md5}",`;
  }).join('\n');

  fs.writeFileSync(path.join(__dirname, '..', 'shared', 'versions.h'),
    `// Please do not edit this file by hand!
// It is to be regenerated by /scripts/generate-versions-h.js

#ifndef __VERSIONS_H__
#define __VERSIONS_H__

// Includes:

    #include "versioning.h"
    #include "slave_protocol.h"

// Variables:

${versionVariables}

#define GIT_REPO "${gitInfo.repo}"
#define GIT_TAG "${gitInfo.tag}"

#ifdef DEVICE_ID
char const * const DeviceMD5Checksums[DEVICE_COUNT+1] = {
${deviceMd5Sums}
};
#endif

char const * const ModuleMD5Checksums[ModuleId_AllCount] = {
${moduleMd5Sums}
};

#endif
`);

  return {
    devices: packageJson.devices,
    modules: packageJson.modules,
  }
}

function calculateMd5ChecksumOfFile(filePath) {
  return md5Hasher(fs.readFileSync(filePath, {encoding: 'binary'}));
}
