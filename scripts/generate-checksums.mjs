#!/usr/bin/env node
import md5Hasher from 'md5';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';
import { readPackageJson } from './common.mjs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

function calculateMd5ChecksumOfFile(filePath) {
  return md5Hasher(fs.readFileSync(filePath, {encoding: 'binary'}));
}

/**
 * @param {object} packageJson - The package.json file
 * @returns {object} - An updated package json object containing the devices and modules with their MD5 checksums
 */
export function generateChecksums({packageJson}) {
  packageJson = structuredClone(packageJson)

  const deviceCount = packageJson.devices.length;
  const deviceMd5Sums = packageJson.devices.map(device => {
    const md5 = calculateMd5ChecksumOfFile(path.join(__dirname, '..', device.source));
    device.md5 = md5;

    return `    [${device.deviceId}] = "${md5}",`;
  }).join('\n');

  const moduleMd5Sums = packageJson.modules.map(module => {
    const md5 = calculateMd5ChecksumOfFile(path.join(__dirname, '..', module.source));
    module.md5 = md5;

    return `    [${module.moduleId}] = "${md5}",`;
  }).join('\n');

  fs.writeFileSync(path.join(__dirname, '..', 'shared', 'fw_checksums.c'),
    `// Please do not edit this file by hand!
// It is to be regenerated by /scripts/generate-checksums.mjs
#include "attributes.h"
#include "slave_protocol.h"

const char *const DeviceMD5Checksums[${deviceCount} + 1] = {
${deviceMd5Sums}
};

const char *const ModuleMD5Checksums[ModuleId_AllModuleCount] = {
${moduleMd5Sums}
};
`);

  return {
    devices: packageJson.devices,
    modules: packageJson.modules,
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  generateChecksums({packageJson : readPackageJson()});
}
